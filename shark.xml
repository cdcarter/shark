<project name="shark" default="deploy" basedir="." xmlns:sf="antlib:com.salesforce">
    <property environment="env" />

    <fail>
       <condition>
         <or>
           <not><isset property="env.CUMULUSCI_PATH" /></not>
           <not><isset property="env.SHARK_PATH" /></not>
         </or>
       </condition>
    </fail>

    <import file="${env.SHARK_PATH}/git-ant-macros.xml" />

    <property name="cumulus_ci.basedir"
              value="${env.CUMULUSCI_PATH}/build"/>

    <taskdef
       resource="net/sf/antcontrib/antlib.xml"
       classpath="${env.CUMULUSCI_PATH}/build/lib/ant-contrib-1.0b2.jar" />

    <!-- If no propertyfile was passed in command line, attempt to load a build.properties if it exists -->
    <!-- commandline passed propfiles override all credentials with sf.override -->
    <if>
        <and>
            <not>
                <isset property="sf.override.username" />
            </not>
            <available file="${basedir}/build.properties" />
        </and>
        <then>
          <loadproperties srcFile="${basedir}/build.properties"/>
        </then>
    </if>
    <!-- properties now contains:
      sf.dev.username=
      sf.dev.password=
      sf.dev.loginurl=
      sf.test.username=
      sf.test.password=
      sf.test.loginurl=
      sf.prod.username=
      sf.prod.password=
      sf.prod.loginurl= -->

    <!-- Setup a blank namespace prefix string.  -->
    <property name="cumulusci.namespace.prefix" value="" />

    <if>
      <isset property="sf.override.username"/>
      <then>
        <property name="sf.dev.username"
                  value="${sf.override.username}"/>
        <property name="sf.dev.password"
                  value="${sf.override.password}"/>
        <property name="sf.dev.loginurl"
                  value="${sf.override.loginurl}"/>
      </then>
    </if>

    <!-- createUnmanagedPackage: Does an empty deployment into an unmanaged package to create it if it does not exist -->
    <target name="createUnmanagedPackageDev">
        <if>
            <isset property="shark.package.name" />
            <then>
                <delete dir="${basedir}/create_package" />
                <mkdir dir="${basedir}/create_package" />
                <buildPackageXml package="${shark.package.name}" version="${shark.package.apiVersion}" srcDir="create_package" />
                <sf:deploy username="${sf.dev.username}" password="${sf.dev.password}" serverurl="${sf.dev.loginurl}" deployRoot="create_package"  />
                <delete dir="${basedir}/create_package" />
            </then>
        </if>
    </target>

    <!-- Load CumulusCI macros! targets -->
    <import file="${env.CUMULUSCI_PATH}/build/cumulusci.xml" />

    <target name="checkDevConnection">
      <sf:deploy username="${sf.dev.username}" password="${sf.dev.password}" serverurl="${sf.dev.loginurl}" deployRoot="${cumulus_ci.basedir}/empty"  />
    </target>
    <target name="checkUATConnection">
      <sf:deploy username="${sf.test.username}" password="${sf.test.password}" serverurl="${sf.test.loginurl}" deployRoot="${cumulus_ci.basedir}/empty"  />
    </target>
    <target name="checkProdConnection">
      <sf:deploy username="${sf.prod.username}" password="${sf.prod.password}" serverurl="${sf.prod.loginurl}" deployRoot="${cumulus_ci.basedir}/empty"  />
    </target>
    <target name="checkConnection">
      <antcall target="checkDevConnection"/>
      <antcall target="checkUATConnection"/>
      <antcall target="checkProdConnection"/>
    </target>

    <target name="retrievePackaged">
      <sequential>
        <delete dir="${shark.package.name}" />
        <mkdir dir="${shark.package.name}"/>
        <sf:retrieve
          username="${sf.dev.username}"
          password="${sf.dev.password}"
          serverurl="${sf.dev.loginurl}"
          retrieveTarget="${shark.package.name}"
          packageNames="${shark.package.name}"/>
      </sequential>
    </target>

    <target name="retrieveDev">
      <sequential>
        <delete dir="dev" />
        <mkdir dir="dev"/>
        <sf:retrieve
          username="${sf.dev.username}"
          password="${sf.dev.password}"
          serverurl="${sf.dev.loginurl}"
          retrieveTarget="dev"
          packageNames="${shark.package.name}"/>
      </sequential>
    </target>

    <target name="retrieveTest">
      <sequential>
        <delete dir="test" />
        <mkdir dir="test"/>
        <sf:retrieve
          username="${sf.test.username}"
          password="${sf.test.password}"
          serverurl="${sf.test.loginurl}"
          retrieveTarget="test"
          packageNames="${shark.package.name}"/>
      </sequential>
    </target>

    <target name="retrieveProd">
      <sequential>
        <delete dir="prod" />
        <mkdir dir="prod"/>
        <sf:retrieve
          username="${sf.prod.username}"
          password="${sf.prod.password}"
          serverurl="${sf.prod.loginurl}"
          retrieveTarget="prod"
          packageNames="${shark.package.name}"/>
      </sequential>
    </target>

    <target name="initialize-dev">
      <sequential>
        <delete dir="dev" />
        <mkdir dir="dev"/>
        <!-- clone github master into dev/ -->
        <git-clone repository="${shark.repo.remote}" dest="dev" dir="${basedir}"/>
        <!-- deploy dev into sf.dev -->
        <!-- load test data -->
      </sequential>

    </target>


</project>
